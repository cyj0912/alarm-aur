pkgname=nvidia-tensorrt
pkgver=4.6_b199
pkgrel=1
pkgdesc='NVIDIA TensorRT Meta Package'
arch=(aarch64)
url='https://repo.download.nvidia.com/jetson/'
license=('custom')
depends=('graphsurgeon-tf=8.0.1_1+cuda10.2' 'libnvinfer8=8.0.1_1+cuda10.2' 'libnvinfer-bin=8.0.1_1+cuda10.2' 'libnvinfer-dev=8.0.1_1+cuda10.2' 'libnvinfer-doc=8.0.1_1+cuda10.2' 'libnvinfer-plugin8=8.0.1_1+cuda10.2' 'libnvinfer-plugin-dev=8.0.1_1+cuda10.2' 'libnvinfer-samples=8.0.1_1+cuda10.2' 'libnvonnxparsers8=8.0.1_1+cuda10.2' 'libnvonnxparsers-dev=8.0.1_1+cuda10.2' 'libnvparsers8=8.0.1_1+cuda10.2' 'libnvparsers-dev=8.0.1_1+cuda10.2' 'python3-libnvinfer=8.0.1_1+cuda10.2' 'python3-libnvinfer-dev=8.0.1_1+cuda10.2' 'tensorrt=8.0.1.6_1+cuda10.2' 'uff-converter-tf=8.0.1_1+cuda10.2' )
source=('https://repo.download.nvidia.com/jetson/t210/pool/main/n/nvidia-tensorrt/nvidia-tensorrt_4.6-b199_arm64.deb')
sha256sums=('178338e1bec39548216c641008d44607534b81b6d511a19d867894eb797a9a66')

prepare() {
  mkdir -p root
  tar xvf data.tar* -C root
}

package() {
  cp -a root/. $pkgdir/
  # Arch on ARM doesn't use multilib
  if test -d $pkgdir/lib/aarch64-linux-gnu; then
    cp -a $pkgdir/lib/aarch64-linux-gnu/. $pkgdir/lib/
    rm -rf $pkgdir/lib/aarch64-linux-gnu
  fi
  if test -d $pkgdir/usr/lib/aarch64-linux-gnu; then
    cp -a $pkgdir/usr/lib/aarch64-linux-gnu/. $pkgdir/usr/lib/
    rm -rf $pkgdir/usr/lib/aarch64-linux-gnu
  fi
}
